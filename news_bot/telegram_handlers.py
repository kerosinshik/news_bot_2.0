import logging
from telebot import TeleBot
from telebot.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, BotCommand
from telebot.apihelper import ApiTelegramException
from datetime import datetime, timedelta
from typing import List, Dict, Any
from .database import get_post_stats, get_top_articles, get_last_publication_time, get_publications_in_last_hour
from .events import generate_events_digest
from .publisher import publish_digest
from .article_processor import get_article_scores, process_articles
from .rss_parser import fetch_articles
from config import ADMIN_CHAT_ID

logger = logging.getLogger(__name__)


def setup_bot_commands(bot: TeleBot):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞."""
    commands = [
        BotCommand("start", "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"),
        BotCommand("help", "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"),
        BotCommand("status", "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"),
        BotCommand("stats", "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—É–±–ª–∏–∫–∞—Ü–∏–π"),
        BotCommand("top", "–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø —Å—Ç–∞—Ç–µ–π"),
        BotCommand("events", "–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è"),
        BotCommand("pause", "–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"),
        BotCommand("resume", "–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"),
        BotCommand("scores", "–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –æ—Ü–µ–Ω–æ–∫ —Å—Ç–∞—Ç–µ–π"),
        BotCommand("optimal_time", "–ü–æ–∫–∞–∑–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–π")
    ]
    bot.set_my_commands(commands)


def send_initial_message(bot: TeleBot, admin_chat_id: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞."""
    message = (
        "ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞\n"
        "/stats - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—É–±–ª–∏–∫–∞—Ü–∏–π\n"
        "/top - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø —Å—Ç–∞—Ç–µ–π\n"
        "/events - –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è\n"
        "/pause - –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏\n"
        "/resume - –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏\n"
        "/scores - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –æ—Ü–µ–Ω–æ–∫ —Å—Ç–∞—Ç–µ–π\n"
        "/optimal_time - –ü–æ–∫–∞–∑–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–π\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    )
    bot.send_message(admin_chat_id, message)


def register_handlers(bot: TeleBot):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π."""

    @bot.message_handler(commands=['start', 'help'])
    def send_welcome(message: Message):
        bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π. –ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")

    @bot.message_handler(commands=['status'])
    def send_status(message: Message):
        if str(message.chat.id) != ADMIN_CHAT_ID:
            bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
            return

        newsbot = bot.newsbot
        status = "ü§ñ –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:\n\n"

        if newsbot.is_paused():
            status += "üì¥ –ë–æ—Ç –Ω–∞ –ø–∞—É–∑–µ\n"
            status += f"‚è≥ –ü–∞—É–∑–∞ –¥–æ: {newsbot.pause_until.strftime('%Y-%m-%d %H:%M:%S')}\n"
        else:
            status += "‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω –∏ –ø—É–±–ª–∏–∫—É–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏\n"

        last_publication = get_last_publication_time()
        if last_publication:
            status += f"üïí –ü–æ—Å–ª–µ–¥–Ω—è—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è: {last_publication.strftime('%Y-%m-%d %H:%M:%S')}\n"
        else:
            status += "üïí –ü—É–±–ª–∏–∫–∞—Ü–∏–π –µ—â–µ –Ω–µ –±—ã–ª–æ\n"

        publications_last_hour = get_publications_in_last_hour()
        status += f"üìä –ü—É–±–ª–∏–∫–∞—Ü–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å: {publications_last_hour}\n"

        bot.reply_to(message, status)

    @bot.message_handler(commands=['stats'])
    def send_stats(message: Message):
        if str(message.chat.id) != ADMIN_CHAT_ID:
            bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
            return
        stats = get_post_stats(7)  # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é
        response = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é:\n\n"

        # –†–∞–∑–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞ —á–∞—Å—Ç–∏
        chunk_size = 50  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
        for i in range(0, len(stats), chunk_size):
            chunk = stats[i:i + chunk_size]
            chunk_response = response if i == 0 else ""  # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–æ–ª—å–∫–æ –∫ –ø–µ—Ä–≤–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
            for stat in chunk:
                chunk_response += f"ID: {stat[0]}, –í—Ä–µ–º—è: {stat[1]}, –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {stat[2]}, –†–µ–ø–æ—Å—Ç—ã: {stat[3]}, –†–µ–∞–∫—Ü–∏–∏: {stat[4]}\n"

            try:
                bot.reply_to(message, chunk_response)
            except ApiTelegramException as e:
                if "message is too long" in str(e):
                    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ –µ—â–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ, —Ä–∞–∑–¥–µ–ª–∏–º –µ–≥–æ –Ω–∞ –µ—â–µ –º–µ–Ω—å—à–∏–µ —á–∞—Å—Ç–∏
                    lines = chunk_response.split('\n')
                    sub_chunk = ""
                    for line in lines:
                        if len(sub_chunk) + len(line) > 4000:  # –û—Å—Ç–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–ø–∞—Å
                            bot.reply_to(message, sub_chunk)
                            sub_chunk = line + "\n"
                        else:
                            sub_chunk += line + "\n"
                    if sub_chunk:
                        bot.reply_to(message, sub_chunk)
                else:
                    # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –µ—ë
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

        bot.reply_to(message, "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.")

    @bot.message_handler(commands=['top'])
    def send_top_articles(message: Message):
        if str(message.chat.id) != ADMIN_CHAT_ID:
            bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
            return
        top_articles = get_top_articles(5)  # –¢–æ–ø-5 —Å—Ç–∞—Ç–µ–π
        response = "üèÜ –¢–æ–ø-5 —Å—Ç–∞—Ç–µ–π:\n\n"
        for article in top_articles:
            response += f"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {article[0]}\n–î–∞—Ç–∞: {article[1]}\n–ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {article[2]}, –†–µ–ø–æ—Å—Ç—ã: {article[3]}, –†–µ–∞–∫—Ü–∏–∏: {article[4]}\n\n"
        bot.reply_to(message, response)

    @bot.message_handler(commands=['events'])
    def send_events(message: Message):
        if str(message.chat.id) != ADMIN_CHAT_ID:
            bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
            return
        events_digest = generate_events_digest()
        bot.reply_to(message, events_digest, parse_mode='HTML')

    @bot.message_handler(commands=['pause'])
    def pause_publications(message: Message):
        if str(message.chat.id) != ADMIN_CHAT_ID:
            bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
            return
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton("1 —á–∞—Å", callback_data="pause_1"),
                     InlineKeyboardButton("2 —á–∞—Å–∞", callback_data="pause_2"),
                     InlineKeyboardButton("4 —á–∞—Å–∞", callback_data="pause_4"))
        bot.reply_to(message, "–ù–∞ —Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏?", reply_markup=keyboard)

    @bot.message_handler(commands=['resume'])
    def resume_publications(message: Message):
        if str(message.chat.id) != ADMIN_CHAT_ID:
            bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
            return
        bot.newsbot.resume_publications()
        bot.reply_to(message, "–ü—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω—ã.")

    @bot.callback_query_handler(func=lambda call: call.data.startswith('pause_'))
    def callback_pause(call: CallbackQuery):
        if str(call.message.chat.id) != ADMIN_CHAT_ID:
            bot.answer_callback_query(call.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
            return
        hours = int(call.data.split('_')[1])
        bot.newsbot.pause_publications(hours)
        bot.answer_callback_query(call.id, f"–ü—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ {hours} —á–∞—Å(–∞/–æ–≤).")
        bot.edit_message_text(
            f"–ü—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ {hours} —á–∞—Å(–∞/–æ–≤) –¥–æ {(datetime.now() + timedelta(hours=hours)).strftime('%Y-%m-%d %H:%M:%S')}",
            call.message.chat.id, call.message.message_id)

    @bot.message_handler(commands=['scores'])
    def send_article_scores(message: Message):
        if str(message.chat.id) != ADMIN_CHAT_ID:
            bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
            return

        bot.reply_to(message, "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–∞–±–ª–∏—Ü—ã –æ—Ü–µ–Ω–æ–∫ —Å—Ç–∞—Ç–µ–π...")

        articles = fetch_articles()
        processed_articles = process_articles(articles)
        scored_articles = get_article_scores(processed_articles)

        table = "üèÜ –¢–∞–±–ª–∏—Ü–∞ –æ—Ü–µ–Ω–æ–∫ —Å—Ç–∞—Ç–µ–π:\n\n"
        table += "<pre>"
        table += f"{'–ó–∞–≥–æ–ª–æ–≤–æ–∫':<50} | {'–û–±—â.':<5} | {'–ù–∞—Å—Ç—Ä.':<6} | {'–°–æ–±.':<4} | {'–í—Ä–µ–º.':<5} | {'–ò—Å—Ç.':<4} | {'–ö–∞—Ç.':<4}\n"
        table += "-" * 90 + "\n"

        for article in scored_articles[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-10 —Å—Ç–∞—Ç–µ–π
            table += f"{article['title']:<50} | {article['total_score']:<5.2f} | {article['sentiment']:<6.2f} | {article['event_relevance']:<4d} | {article['time_relevance']:<5d} | {article['source_priority']:<4d} | {article['category_weight']:<4.2f}\n"

        table += "</pre>"

        bot.reply_to(message, table, parse_mode='HTML')

    @bot.message_handler(commands=['optimal_time'])
    def send_optimal_time(message: Message):
        if str(message.chat.id) != ADMIN_CHAT_ID:
            bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
            return

        newsbot = bot.newsbot
        optimal_hours = sorted(newsbot.analyze_optimal_publishing_time())

        response = "üï∞ –û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–π:\n\n"
        for hour in optimal_hours:
            response += f"‚Ä¢ {hour:02d}:00 - {(hour + 1) % 24:02d}:00\n"

        response += "\n–≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ –∞–Ω–∞–ª–∏–∑–µ –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏ –∞—É–¥–∏—Ç–æ—Ä–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π."

        bot.reply_to(message, response)


    @bot.message_handler(func=lambda message: True)
    def echo_all(message: Message):
        bot.reply_to(message,
                     "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.")


def create_digest_and_publish(bot: TeleBot):
    """–°–æ–∑–¥–∞–µ—Ç –∏ –ø—É–±–ª–∏–∫—É–µ—Ç –¥–∞–π–¥–∂–µ—Å—Ç —Å–æ–±—ã—Ç–∏–π."""
    digest = generate_events_digest()
    publish_digest(bot, digest)


if __name__ == "__main__":
    # –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –º–æ–¥—É–ª—è
    from telebot import TeleBot
    from config import TELEGRAM_BOT_TOKEN

    logging.basicConfig(level=logging.INFO)

    bot = TeleBot(TELEGRAM_BOT_TOKEN)
    setup_bot_commands(bot)
    register_handlers(bot)

    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    bot.polling(none_stop=True)